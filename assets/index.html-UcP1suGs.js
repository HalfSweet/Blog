import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as i,c as d,f as n,a as e,b as o,d as r,e as s}from"./app-e2eowxEg.js";const l="/assets/2023-08-19-12-01-32-JLlpJMIn.png",p="/assets/2023-08-19-12-09-01-8b79QO73.png",h={},_=e("p",null,"今日，在千呼万唤中，Arm 的 MDK6 桌面端终于出来了，本想作为第一批吃螃蟹的开发者，但是当时 Air32 和 Air001 的烧录均有问题，最后在 Arm 官方的支持下，终于可以正常使用了，那么现在我们就来尝试一下。",-1),m=e("h2",{id:"安装-mdk6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-mdk6","aria-hidden":"true"},"#"),o(" 安装 MDK6")],-1),u=e("p",null,"MDK6 实际上是 VSCode 的一个插件，这看起来很荒谬，实际上也确实很荒谬。所以首先我们需要安装 VSCode，这里不多赘述。",-1),v={href:"https://marketplace.visualstudio.com/items?itemName=Arm.keil-studio-pack",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"install",-1),k=s('<h2 id="转换工程" tabindex="-1"><a class="header-anchor" href="#转换工程" aria-hidden="true">#</a> 转换工程</h2><p>因为目前 MDK6 的工程创建还很辣鸡，因此我们选择把原来 MDK5 的工程转换过来，这里我们以 Air001 为例。</p><p>我们随便找一个例子，我们这里以 GPIO 下的<code>GPIO_Toggle</code>为例，首先我们先复制粘贴一份，然后重命名为<code>GPIO_Toggle_MDK6</code>。打开其中的<code>MDK-ARM</code>文件夹，然后选择在 VSCode 中打开。</p><p>这是我们会发现出现了一个<code>Convert μVision project Project.uvprojx to csolution?</code>的弹窗，点击<code>convert</code>即可。</p><figure><img src="'+l+'" alt="convert" tabindex="0" loading="lazy"><figcaption>convert</figcaption></figure><p>此时会自动转换，稍等即可。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>目前仅支持转换 AC6 的工程，如果是 AC5 编译器的工程需要自行修改</p></div><h2 id="编译工程" tabindex="-1"><a class="header-anchor" href="#编译工程" aria-hidden="true">#</a> 编译工程</h2><p>点击左边的<code>CMSIS</code>按钮，点击<code>action</code>列表中的<code>build</code>即可开始编译。</p><h2 id="烧录程序" tabindex="-1"><a class="header-anchor" href="#烧录程序" aria-hidden="true">#</a> 烧录程序</h2><p>首先我们插入调试器，然后点击左边的<code>Device Manage</code>按钮，然后点击<code>Add device</code>，然后选择实际使用的调试器，我这里使用的是 ST-Link。然后点击左边列表中的铅笔图标，也就是<code>Edit Device</code></p><ol><li>修改名称，可以修改成自己喜欢的，此处我们保存默认，直接按<code>Enter</code>键即可</li><li>选择 pack 包，我们输入本地最新的 pack 包路径，我这里为<code>D:\\GitHub\\luatos-soc-air001\\PACK\\Keil.AIR001_DFP.1.1.0.pack</code><br><img src="'+p+'" alt="pack" loading="lazy"></li><li>选择芯片，我们这里选择<code>AIR001Dev</code>即可</li></ol><p>点击左边的<code>CMSIS</code>按钮，点击<code>action</code>列表中的<code>RUN</code>按钮即可下载。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>目前 MDK6 还不能修改调试器的速度，因此默认的 10M 对于 Air001 来说太高了，建议使用别的调试器进行烧录。</p><p>如果出现<code>ERROR: Cannot attain state requested. (RDDI-ERROR 52)</code>这样的报错，就是说明速率太高无法下载。</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>默认下载完不会自动复位，我们可能需要手动按一下 RST 按钮</p></div><p>至此，我们就完成了一个简单的工程的编译与烧录。</p>',16);function g(A,D){const t=a("ExternalLinkIcon");return i(),d("div",null,[_,n(" more "),m,u,e("p",null,[o("安装完成后，我们打开插件的主页"),e("a",v,[o("https://marketplace.visualstudio.com/items?itemName=Arm.keil-studio-pack"),r(t)]),o("，点击"),f,o("，即可跳转到 VSCode 中自动安装。这个过程中会安装一大堆依赖的奇奇怪怪的很多插件，甚至可能有 AC6 编译器，请耐心等待。")]),k])}const M=c(h,[["render",g],["__file","index.html.vue"]]);export{M as default};
