import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a,o as i}from"./app-CfwcQ8pz.js";const r="/assets/2023-08-19-12-01-32-kuWkkwif.png",c="/assets/2023-08-19-12-09-01-Dxvv1A7v.png",n={};function p(l,e){return i(),o("div",null,e[0]||(e[0]=[a('<p>今日，在千呼万唤中，Arm 的 MDK6 桌面端终于出来了，本想作为第一批吃螃蟹的开发者，但是当时 Air32 和 Air001 的烧录均有问题，最后在 Arm 官方的支持下，终于可以正常使用了，那么现在我们就来尝试一下。</p><h2 id="安装-mdk6" tabindex="-1"><a class="header-anchor" href="#安装-mdk6"><span>安装 MDK6</span></a></h2><p>MDK6 实际上是 VSCode 的一个插件，这看起来很荒谬，实际上也确实很荒谬。所以首先我们需要安装 VSCode，这里不多赘述。</p><p>安装完成后，我们打开插件的主页<a href="https://marketplace.visualstudio.com/items?itemName=Arm.keil-studio-pack" target="_blank" rel="noopener noreferrer">https://marketplace.visualstudio.com/items?itemName=Arm.keil-studio-pack</a>，点击<code>install</code>，即可跳转到 VSCode 中自动安装。这个过程中会安装一大堆依赖的奇奇怪怪的很多插件，甚至可能有 AC6 编译器，请耐心等待。</p><h2 id="转换工程" tabindex="-1"><a class="header-anchor" href="#转换工程"><span>转换工程</span></a></h2><p>因为目前 MDK6 的工程创建还很辣鸡，因此我们选择把原来 MDK5 的工程转换过来，这里我们以 Air001 为例。</p><p>我们随便找一个例子，我们这里以 GPIO 下的<code>GPIO_Toggle</code>为例，首先我们先复制粘贴一份，然后重命名为<code>GPIO_Toggle_MDK6</code>。打开其中的<code>MDK-ARM</code>文件夹，然后选择在 VSCode 中打开。</p><p>这是我们会发现出现了一个<code>Convert μVision project Project.uvprojx to csolution?</code>的弹窗，点击<code>convert</code>即可。</p><p><img src="'+r+'" alt="convert"></p><p>此时会自动转换，稍等即可。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>目前仅支持转换 AC6 的工程，如果是 AC5 编译器的工程需要自行修改</p></div><h2 id="编译工程" tabindex="-1"><a class="header-anchor" href="#编译工程"><span>编译工程</span></a></h2><p>点击左边的<code>CMSIS</code>按钮，点击<code>action</code>列表中的<code>build</code>即可开始编译。</p><h2 id="烧录程序" tabindex="-1"><a class="header-anchor" href="#烧录程序"><span>烧录程序</span></a></h2><p>首先我们插入调试器，然后点击左边的<code>Device Manage</code>按钮，然后点击<code>Add device</code>，然后选择实际使用的调试器，我这里使用的是 ST-Link。然后点击左边列表中的铅笔图标，也就是<code>Edit Device</code></p><ol><li>修改名称，可以修改成自己喜欢的，此处我们保存默认，直接按<code>Enter</code>键即可</li><li>选择 pack 包，我们输入本地最新的 pack 包路径，我这里为<code>D:\\GitHub\\luatos-soc-air001\\PACK\\Keil.AIR001_DFP.1.1.0.pack</code><img src="'+c+'" alt="pack"></li><li>选择芯片，我们这里选择<code>AIR001Dev</code>即可</li></ol><p>点击左边的<code>CMSIS</code>按钮，点击<code>action</code>列表中的<code>RUN</code>按钮即可下载。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>目前 MDK6 还不能修改调试器的速度，因此默认的 10M 对于 Air001 来说太高了，建议使用别的调试器进行烧录。</p><p>如果出现<code>ERROR: Cannot attain state requested. (RDDI-ERROR 52)</code>这样的报错，就是说明速率太高无法下载。</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>默认下载完不会自动复位，我们可能需要手动按一下 RST 按钮</p></div><p>至此，我们就完成了一个简单的工程的编译与烧录。</p>',20)]))}const m=t(n,[["render",p]]),h=JSON.parse(`{"path":"/posts/MDK6-Dev/","title":"更现代的开发方式？使用 MDK6 进行开发","lang":"zh-CN","frontmatter":{"title":"更现代的开发方式？使用 MDK6 进行开发","date":"2023-08-19T12:00:00.000Z","permalink":"/posts/MDK6-Dev/","category":["单片机"],"tag":["Air001","Air32","合宙"],"author":{"name":"HalfSweet","link":"https://github.com/HalfSweet"},"description":"今日，在千呼万唤中，Arm 的 MDK6 桌面端终于出来了，本想作为第一批吃螃蟹的开发者，但是当时 Air32 和 Air001 的烧录均有问题，最后在 Arm 官方的支持下，终于可以正常使用了，那么现在我们就来尝试一下。","head":[["meta",{"property":"og:url","content":"https://halfsweet.cn/posts/MDK6-Dev/"}],["meta",{"property":"og:site_name","content":"HalfSweet's Blog"}],["meta",{"property":"og:title","content":"更现代的开发方式？使用 MDK6 进行开发"}],["meta",{"property":"og:description","content":"今日，在千呼万唤中，Arm 的 MDK6 桌面端终于出来了，本想作为第一批吃螃蟹的开发者，但是当时 Air32 和 Air001 的烧录均有问题，最后在 Arm 官方的支持下，终于可以正常使用了，那么现在我们就来尝试一下。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-23T06:35:02.000Z"}],["meta",{"property":"article:author","content":"HalfSweet"}],["meta",{"property":"article:tag","content":"Air001"}],["meta",{"property":"article:tag","content":"Air32"}],["meta",{"property":"article:tag","content":"合宙"}],["meta",{"property":"article:published_time","content":"2023-08-19T12:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-23T06:35:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"更现代的开发方式？使用 MDK6 进行开发\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-19T12:00:00.000Z\\",\\"dateModified\\":\\"2024-03-23T06:35:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HalfSweet\\",\\"link\\":\\"https://github.com/HalfSweet\\"}]}"]]},"headers":[{"level":2,"title":"安装 MDK6","slug":"安装-mdk6","link":"#安装-mdk6","children":[]},{"level":2,"title":"转换工程","slug":"转换工程","link":"#转换工程","children":[]},{"level":2,"title":"编译工程","slug":"编译工程","link":"#编译工程","children":[]},{"level":2,"title":"烧录程序","slug":"烧录程序","link":"#烧录程序","children":[]}],"git":{"createdTime":1692418528000,"updatedTime":1711175702000,"contributors":[{"name":"HalfSweet","username":"HalfSweet","email":"halfsweet@halfsweet.cn","commits":2,"url":"https://github.com/HalfSweet"}]},"readingTime":{"minutes":2.42,"words":726},"filePathRelative":"posts/更现代的开发方式？使用MDK6进行开发.md","localizedDate":"2023年8月19日","excerpt":"<p>今日，在千呼万唤中，Arm 的 MDK6 桌面端终于出来了，本想作为第一批吃螃蟹的开发者，但是当时 Air32 和 Air001 的烧录均有问题，最后在 Arm 官方的支持下，终于可以正常使用了，那么现在我们就来尝试一下。</p>\\n","autoDesc":true}`);export{m as comp,h as data};
